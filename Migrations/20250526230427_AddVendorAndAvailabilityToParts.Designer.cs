// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using rotaryproject.Data;

#nullable disable

namespace rotaryproject.Migrations
{
    [DbContext(typeof(RotaryEngineDbContext))]
    [Migration("20250526230427_AddVendorAndAvailabilityToParts")]
    partial class AddVendorAndAvailabilityToParts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("rotaryproject.Data.Models.CompatibilityRule", b =>
                {
                    b.Property<int>("RuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RuleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RuleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsCompatible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("PartAId")
                        .HasColumnType("int")
                        .HasColumnName("PartA_ID");

                    b.Property<int>("PartBId")
                        .HasColumnType("int")
                        .HasColumnName("PartB_ID");

                    b.HasKey("RuleId")
                        .HasName("PK__Compatib__110458C2D19B7CFD");

                    b.HasIndex(new[] { "PartAId" }, "IX_CompatibilityRules_PartA_ID");

                    b.HasIndex(new[] { "PartBId" }, "IX_CompatibilityRules_PartB_ID");

                    b.HasIndex(new[] { "PartAId", "PartBId" }, "UQ__Compatib__C9D6D737D786A5C9")
                        .IsUnique();

                    b.ToTable("CompatibilityRules");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.Part", b =>
                {
                    b.Property<int>("PartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartId"));

                    b.Property<string>("Availability")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("BasePrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Brand")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EngineCompatibility")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImagePath")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ManufacturingYear")
                        .HasColumnType("int");

                    b.Property<string>("Material")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ModelPath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("PieceCount")
                        .HasColumnType("int");

                    b.Property<double?>("Rating")
                        .HasColumnType("float");

                    b.Property<int?>("RatingCount")
                        .HasColumnType("int");

                    b.Property<int?>("SealAmount")
                        .HasColumnType("int");

                    b.Property<string>("SizeMm")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sku")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VendorName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("VendorProductUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("PartId")
                        .HasName("PK__Parts__7C3F0D3095AB3286");

                    b.HasIndex("CategoryId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.PartCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoryId")
                        .HasName("PK__PartCate__19093A2B0B380B12");

                    b.HasIndex(new[] { "Name" }, "UQ__PartCate__737584F67434BF54")
                        .IsUnique();

                    b.ToTable("PartCategories");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.PartStat", b =>
                {
                    b.Property<int>("PartStatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PartStatID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PartStatId"));

                    b.Property<int>("PartId")
                        .HasColumnType("int")
                        .HasColumnName("PartID");

                    b.Property<string>("StatName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StatValue")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Unit")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("PartStatId")
                        .HasName("PK__PartStat__AFCC32BA505FA52A");

                    b.HasIndex(new[] { "PartId" }, "IX_PartStats_PartID");

                    b.ToTable("PartStats");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.CompatibilityRule", b =>
                {
                    b.HasOne("rotaryproject.Data.Models.Part", "PartA")
                        .WithMany("CompatibilityRulePartAs")
                        .HasForeignKey("PartAId")
                        .IsRequired()
                        .HasConstraintName("FK__Compatibi__PartA__4316F928");

                    b.HasOne("rotaryproject.Data.Models.Part", "PartB")
                        .WithMany("CompatibilityRulePartBs")
                        .HasForeignKey("PartBId")
                        .IsRequired()
                        .HasConstraintName("FK__Compatibi__PartB__440B1D61");

                    b.Navigation("PartA");

                    b.Navigation("PartB");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.Part", b =>
                {
                    b.HasOne("rotaryproject.Data.Models.PartCategory", "Category")
                        .WithMany("Parts")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Parts__CategoryI__3B75D760");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.PartStat", b =>
                {
                    b.HasOne("rotaryproject.Data.Models.Part", "Part")
                        .WithMany("PartStats")
                        .HasForeignKey("PartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PartStats__PartI__3E52440B");

                    b.Navigation("Part");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.Part", b =>
                {
                    b.Navigation("CompatibilityRulePartAs");

                    b.Navigation("CompatibilityRulePartBs");

                    b.Navigation("PartStats");
                });

            modelBuilder.Entity("rotaryproject.Data.Models.PartCategory", b =>
                {
                    b.Navigation("Parts");
                });
#pragma warning restore 612, 618
        }
    }
}
